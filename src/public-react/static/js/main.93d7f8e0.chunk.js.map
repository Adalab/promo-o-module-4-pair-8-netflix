{"version":3,"sources":["components/Header.js","components/MoviesList.js","components/AllMovies.js","components/MyMovies.js","components/Login.js","components/Profile.js","components/SignUp.js","services/api-movies.js","services/api-user.js","services/router.js","services/local-storage.js","components/App.js","index.js"],"names":["Header","props","className","to","isUserLogged","renderUnloggedUserLinks","onClick","logout","renderLoggedUserLinks","MoviesList","renderMovies","movies","map","movie","id","src","image","alt","name","genre","href","length","AllMovies","handleOptions","ev","handleAllMoviesOptions","value","target","key","htmlFor","allMoviesOptionGender","onChange","type","checked","allMoviesOptionSort","MyMovies","Login","useState","email","setEmail","password","setPassword","onSubmit","preventDefault","sendLoginToApi","loginErrorMessage","renderErrorMessage","Profile","userName","setName","userEmail","userPassword","sendProfileToApi","userId","SignUp","sendSingUpToApi","signUpErrorMessage","objToExport","getMoviesFromApi","params","console","log","queryParams","gender","sort","fetch","method","then","response","json","data","body","JSON","stringify","headers","getProfileFromApi","getUserMoviesFromApi","redirect","path","window","location","replace","reload","get","defaultData","localStorage","getItem","parse","set","setItem","App","Ls","setUserId","setUserName","setUserEmail","setUserPassword","userMovies","setUserMovies","setLoginErrorMessage","setSignUpErrorMessage","appMovies","setAppMovies","setAllMoviesOptionGender","setAllMoviesOptionSort","useEffect","apiMovies","apiUser","router","exact","loginData","success","errorMessage","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.93d7f8e0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const renderUnloggedUserLinks = () => {\n    if (props.isUserLogged === false)\n      return (\n        <>\n          <li className=\"nav__item\">\n            <Link className=\"nav__link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n          <li className=\"nav__item\">\n            <Link className=\"nav__link\" to=\"/signup\">\n              Registro\n            </Link>\n          </li>\n        </>\n      );\n  };\n\n  const renderLoggedUserLinks = () => {\n    if (props.isUserLogged === true)\n      return (\n        <>\n          <li className=\"nav__item\">\n            <Link className=\"nav__link\" to=\"/profile\">\n              Mi perfil\n            </Link>\n          </li>\n          <li className=\"nav__item\">\n            <Link className=\"nav__link\" to=\"/my-movies\">\n              Mis películas\n            </Link>\n          </li>\n          <li className=\"nav__item\">\n            <span className=\"nav__link\" onClick={props.logout}>\n              Cerrar sesión\n            </span>\n          </li>\n        </>\n      );\n  };\n\n  return (\n    <header className=\"col2 border--medium\">\n      <Link className=\"nav__link\" to=\"/\">\n        <h1 className=\"title--big\">Netflix</h1>\n      </Link>\n      <nav className=\"text-align-right\">\n        <ul>\n          <li className=\"nav__item\">\n            <Link className=\"nav__link\" to=\"/\">\n              Inicio\n            </Link>\n          </li>\n          {renderUnloggedUserLinks()}\n          {renderLoggedUserLinks()}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst MoviesList = (props) => {\n  const renderMovieList = () => {\n    return <ul className=\"cards\">{renderMovies()}</ul>;\n  };\n  // const handleMoviesClick = (event) => {\n  //   return fetch(`//localhost:4000/movie/${event.currentTarget.id}`, {\n  //     method: \"GET\",\n  //   })\n  //     .then((response) => response.json())\n  //     .then((data) => {\n  //       return data;\n  //     });\n  // };\n  const renderMovies = () => {\n    return props.movies.map((movie) => {\n      return (\n        <li\n          id={movie.id}\n          key={movie.id}\n          className=\"card\"\n          // onClick={handleMoviesClick}\n        >\n          <img\n            className=\"card__img\"\n            src={movie.image}\n            alt={`Carátula de ${movie.name}`}\n          />\n          <h3 className=\"card__title\">{movie.name}</h3>\n          <p className=\"card__description\">Género: {movie.genre}</p>\n          <a href={`//localhost:4000/movie/${movie.id}`}> Ver detalle</a>\n        </li>\n      );\n    });\n  };\n\n  const renderEmptyList = () => {\n    return <p>No hay películas en este listado</p>;\n  };\n\n  return props.movies.length ? renderMovieList() : renderEmptyList();\n};\n\nexport default MoviesList;\n","import React from 'react';\nimport MoviesList from './MoviesList';\nimport '../stylesheets/AppMovies.scss';\n\nconst AllMovies = props => {\n  const handleOptions = ev => {\n    props.handleAllMoviesOptions({\n      value: ev.target.value,\n      key: ev.target.name\n    });\n  };\n\n  return (\n    <section className=\"border--medium\">\n      <h1 className=\"title--medium\">Estas son todas las películas de nuestro catálogo</h1>\n      <form className=\"movies__filters\">\n        <div className=\"movies__filters--gender\">\n          <label htmlFor=\"filterGender\">Filtrar por género</label>\n          <select\n            className=\"form__input-text\"\n            id=\"filterGender\"\n            name=\"gender\"\n            value={props.allMoviesOptionGender}\n            onChange={handleOptions}\n          >\n            <option value=\"\">Todas</option>\n            <option value=\"Drama\">Drama</option>\n            <option value=\"Comedia\">Comedia</option>\n          </select>\n        </div>\n\n        <div className=\"movies__filters--sort\">\n          <label>\n            Ordernar: A-Z\n            <input\n              className=\"movies__radio\"\n              type=\"radio\"\n              name=\"sort\"\n              value=\"asc\"\n              checked={props.allMoviesOptionSort === 'asc'}\n              onChange={handleOptions}\n            />\n          </label>\n\n          <label>\n            Z-A\n            <input\n              className=\"movies__radio\"\n              type=\"radio\"\n              name=\"sort\"\n              value=\"desc\"\n              checked={props.allMoviesOptionSort === 'desc'}\n              onChange={handleOptions}\n            />\n          </label>\n        </div>\n      </form>\n\n      <MoviesList movies={props.movies} />\n    </section>\n  );\n};\n\nexport default AllMovies;\n","import React from 'react';\nimport MoviesList from './MoviesList';\n\nconst MyMovies = props => {\n  return (\n    <section className=\"border--medium\">\n      <h1 className=\"title--medium\">Estas son todas tus películas</h1>\n      <MoviesList movies={props.movies} />\n    </section>\n  );\n};\n\nexport default MyMovies;\n","import React, { useState } from 'react';\n\nconst Login = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // events\n\n  const handleEmail = ev => {\n    setEmail(ev.target.value);\n  };\n\n  const handlePassword = ev => {\n    setPassword(ev.target.value);\n  };\n\n  const handleForm = ev => {\n    ev.preventDefault();\n    // enviamos los datos a App y este al API\n    props.sendLoginToApi({\n      email: email,\n      password: password\n    });\n  };\n\n  // render\n\n  const renderErrorMessage = () => {\n    // Si el API ha devuelto un error, App lo guarda en su estado y nos lo pasa por props\n    if (props.loginErrorMessage !== '') {\n      return (\n        <p className=\"border--medium border--warning mt-1\">\n          Error en el login: <span className=\"text--bold\">{props.loginErrorMessage}</span>\n        </p>\n      );\n    }\n  };\n\n  return (\n    <section className=\"border--medium\">\n      <h1>Identifícate</h1>\n      <form onSubmit={handleForm}>\n        <label className=\"form__label display-block\" htmlFor=\"email\">\n          Escribe tu email\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={handleEmail}\n        />\n\n        <label className=\"form__label display-block\" htmlFor=\"password\">\n          Escribe tu contraseña\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={handlePassword}\n        />\n\n        <input className=\"form__btn display-block\" type=\"submit\" value=\"Entrar\" />\n\n        {renderErrorMessage()}\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\n\nconst Profile = (props) => {\n  const [name, setName] = useState(props.userName || \"\");\n  const [email, setEmail] = useState(props.userEmail || \"\");\n  const [password, setPassword] = useState(props.userPassword || \"\");\n\n  // events\n\n  const handleName = (ev) => {\n    setName(ev.target.value);\n  };\n\n  const handleEmail = (ev) => {\n    setEmail(ev.target.value);\n  };\n\n  const handlePassword = (ev) => {\n    setPassword(ev.target.value);\n  };\n\n  const handleForm = (ev) => {\n    ev.preventDefault();\n    // enviamos los datos a App y este al API\n    props.sendProfileToApi(props.userId, {\n      name: name,\n      email: email,\n      password: password,\n    });\n  };\n\n  // render\n\n  return (\n    <section className=\"border--medium\">\n      <h1>Mi perfil</h1>\n      <form onSubmit={handleForm}>\n        <label className=\"form__label display-block\" htmlFor=\"name\">\n          Mi nombre\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={name}\n          onChange={handleName}\n        />\n\n        <label className=\"form__label display-block\" htmlFor=\"email\">\n          Mi email\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={handleEmail}\n        />\n\n        <label className=\"form__label display-block\" htmlFor=\"password\">\n          Mi contraseña\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={handlePassword}\n        />\n\n        <input\n          className=\"form__btn display-block\"\n          type=\"submit\"\n          value=\"Guardar\"\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\n\nconst SignUp = props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // events\n\n  const handleEmail = ev => {\n    setEmail(ev.target.value);\n  };\n\n  const handlePassword = ev => {\n    setPassword(ev.target.value);\n  };\n\n  const handleForm = ev => {\n    ev.preventDefault();\n    // Enviamos los datos a App y este al API\n    props.sendSingUpToApi({\n      email: email,\n      password: password\n    });\n  };\n\n  // render\n\n  const renderErrorMessage = () => {\n    // Si el API ha devuelto un error, APP lo guarda en el estado y nos lo pasa\n    if (props.signUpErrorMessage !== '') {\n      return (\n        <p className=\"border--medium border--warning mt-1\">\n          Error en el registro: <span className=\"text--bold\">{props.signUpErrorMessage}</span>\n        </p>\n      );\n    }\n  };\n\n  return (\n    <section className=\"border--medium\">\n      <h1>Regístrate</h1>\n      <form onSubmit={handleForm}>\n        <label className=\"form__label display-block\" htmlFor=\"email\">\n          Escribe tu email\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={handleEmail}\n        />\n\n        <label className=\"form__label display-block\" htmlFor=\"password\">\n          Escribe tu contraseña\n        </label>\n        <input\n          className=\"form__input-text\"\n          type=\"text\"\n          name=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={handlePassword}\n        />\n\n        <input className=\"form__btn display-block\" type=\"submit\" value=\"Registrar\" />\n\n        {renderErrorMessage()}\n      </form>\n    </section>\n  );\n};\n\nexport default SignUp;\n","// login\n\nconst getMoviesFromApi = (params) => {\n  console.log(params);\n  console.log(\"Se están pidiendo las películas de la app\");\n  // create query params\n  const queryParams = `?genre=${params.gender}&sort=${params.sort}`;\n  // CAMBIA ESTE FETCH PARA QUE APUNTE A UN ENDPOINT DE TU SERVIDOR, PIENSA SI DEBE SER GET O POST, PIENSA QUÉ DATOS DEBES ENVIAR, ETC\n  return fetch(\"//localhost:4000/movies\" + queryParams, { method: \"GET\" })\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    });\n};\n\nconst objToExport = {\n  getMoviesFromApi: getMoviesFromApi,\n};\n\nexport default objToExport;\n","// login\n\nconst sendLoginToApi = (data) => {\n  console.log('Se están enviando datos al login:', data);\n  // CAMBIA ESTE FETCH PARA QUE APUNTE A UN ENDPOINT DE TU SERVIDOR, PIENSA SI DEBE SER GET O POST, PIENSA QUÉ DATOS DEBES ENVIAR, ETC\n  return fetch('//localhost:4000/login', {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    });\n};\n\n// signup\n\nconst sendSingUpToApi = (data) => {\n  console.log('Se están enviando datos al signup:', data);\n  // CAMBIA ESTE FETCH PARA QUE APUNTE A UN ENDPOINT DE TU SERVIDOR, PIENSA SI DEBE SER GET O POST, PIENSA QUÉ DATOS DEBES ENVIAR, ETC\n  return fetch('//localhost:4000/sign-up', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(data),\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    });\n};\n\n// profile\n\nconst sendProfileToApi = (userId, data) => {\n  console.log('Se están enviando datos al profile:', userId, data);\n  // CAMBIA ESTE FETCH PARA QUE APUNTE A UN ENDPOINT DE TU SERVIDOR, PIENSA SI DEBE SER GET O POST, PIENSA QUÉ DATOS DEBES ENVIAR, ETC\n  return fetch('//localhost:4000/user/profile', {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json', 'user-id': userId },\n    body: JSON.stringify(data),\n  });\n  // .then((response) => response.json())\n  // .then((data) => {\n  //   return data;\n  // });\n};\n\nconst getProfileFromApi = (userId) => {\n  console.log('Se están pidiendo datos del profile del usuario:', userId);\n  // CAMBIA ESTE FETCH PARA QUE APUNTE A UN ENDPOINT DE TU SERVIDOR, PIENSA SI DEBE SER GET O POST, PIENSA QUÉ DATOS DEBES ENVIAR, ETC\n  return fetch('//localhost:4000/user/profile', {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json', 'user-id': userId },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      return data;\n    });\n};\n\n// user movies\n\nconst getUserMoviesFromApi = (userId) => {\n  console.log(\n    'Se están pidiendo datos de las películas de la usuaria:',\n    userId\n  );\n  // CAMBIA ESTE FETCH PARA QUE APUNTE A UN ENDPOINT DE TU SERVIDOR, PIENSA SI DEBE SER GET O POST, PIENSA QUÉ DATOS DEBES ENVIAR, ETC\n  return fetch('//localhost:4000/user/movies', {\n    method: 'GET',\n    headers: { 'Content-Type': 'application/json', 'user-id': userId },\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      return data;\n    });\n};\n\nconst objToExport = {\n  sendLoginToApi: sendLoginToApi,\n  sendSingUpToApi: sendSingUpToApi,\n  sendProfileToApi: sendProfileToApi,\n  getProfileFromApi: getProfileFromApi,\n  getUserMoviesFromApi: getUserMoviesFromApi,\n};\n\nexport default objToExport;\n","/*\nHemos creado este servicio para gestionar las rutas.\n\nNecesitamos este servicio porque react-router-dom solo permite gestionar\nrutas cuando es la usuaria la que pulsa en un link.\n\nSi queremos cambiar de rutas en función de un dato necesitamos hacerlo a través\ndel window.location https://developer.mozilla.org/es/docs/Web/API/Window/location\n\n*/\nconst redirect = path => {\n  // cambiar la ruta actual\n  window.location.replace(`#${path}`);\n};\n\nconst reload = path => {\n  // refrescar la página\n  window.location.reload();\n};\n\nconst objToExport = {\n  redirect: redirect,\n  reload: reload\n};\n\nexport default objToExport;\n","const get = (key, defaultData) => {\n  const data = localStorage.getItem(key);\n  if (data === null) {\n    return defaultData;\n  } else {\n    return JSON.parse(data);\n  }\n};\n\nconst set = (key, value) => {\n  localStorage.setItem(key, JSON.stringify(value));\n};\n\nconst objToExport = {\n  get: get,\n  set: set\n};\n\nexport default objToExport;\n","import React, { useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// components\nimport Header from './Header';\nimport AllMovies from './AllMovies';\nimport MyMovies from './MyMovies';\nimport Login from './Login';\nimport Profile from './Profile';\nimport SignUp from './SignUp';\n// services\nimport apiMovies from '../services/api-movies';\nimport apiUser from '../services/api-user';\nimport router from '../services/router';\nimport Ls from '../services/local-storage';\n\nconst App = () => {\n  // state: user\n  const [userId, setUserId] = useState(Ls.get('id', ''));\n  const [userName, setUserName] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [userMovies, setUserMovies] = useState([]);\n  // state: login\n  const [loginErrorMessage, setLoginErrorMessage] = useState('');\n  // state: sign up\n  const [signUpErrorMessage, setSignUpErrorMessage] = useState('');\n  // state: movies\n  const [appMovies, setAppMovies] = useState([]);\n  const [allMoviesOptionGender, setAllMoviesOptionGender] = useState('');\n  const [allMoviesOptionSort, setAllMoviesOptionSort] = useState('asc');\n\n  /*\n  useEffect: obtener las películas del API.\n  Se ejecuta cuando allMoviesOptionGender o allMoviesOptionSort cambian de valor.\n  Como queremos que el back devuelva las películas filtradas por género y ordenadas por nombre estamos pasando a getMoviesFromApi estos dos valores.\n  */\n  useEffect(() => {\n    const params = {\n      gender: allMoviesOptionGender,\n      sort: allMoviesOptionSort,\n    };\n    apiMovies.getMoviesFromApi(params).then((response) => {\n      setAppMovies(response.movies);\n    });\n  }, [allMoviesOptionGender, allMoviesOptionSort]);\n\n  useEffect(() => {\n    // Guardamos el nombre y el email en el local storage\n    Ls.set('id', userId);\n    // Este useEffect solo se ejecutará cuando cambie el nombre o el email\n    console.log('Ha cambiado el nombre o el email');\n  }, [userId]);\n\n  /*\n  useEffect: obtener el perfil de la usuaria.\n  Se ejecuta cuando userId cambian de valor, es decir, cuando pasa de un string vacío a un strin relleno con el id de la usuaria.\n  Como queremos que el back devuelva los datos de una usuaria getProfileFromApi recibe el userId.\n  */\n  useEffect(() => {\n    if (userId !== '') {\n      apiUser.getProfileFromApi(userId).then((response) => {\n        console.log('dentro del get', response);\n        setUserName(response.name);\n        setUserEmail(response.email);\n        setUserPassword(response.password);\n      });\n    }\n  }, [userId]);\n\n  /*\n  useEffect: obtener las películas de la usuaria.\n  Se ejecuta cuando userId cambian de valor, es decir, cuando pasa de un string vacío a un strin relleno con el id de la usuaria.\n  Como queremos que el back devuelva las películas de una usuaria getUserMoviesFromApi recibe el userId.\n  */\n  useEffect(() => {\n    if (userId !== '') {\n      apiUser.getUserMoviesFromApi(userId).then((response) => {\n        setUserMovies(response.movies);\n      });\n    }\n  }, [userId]);\n\n  /*\n  Event: enviar datos del login al API.\n  Con este evento enviamos los datos del login al servidor cuando la usuaria lanza el evento.\n  Como queremos que el back devuelva el id de la usuaria sendLoginToApi recibe el email y la contraseña que ella haya escrito.\n  */\n  const sendLoginToApi = (loginData) => {\n    // Limpiamos el error antes de enviar los datos al API\n    setLoginErrorMessage('');\n    // Enviamos los datos al API\n    apiUser.sendLoginToApi(loginData).then((response) => {\n      if (response.success === true) {\n        setUserId(response.userId);\n        // Si la usuaria introduce bien sus datos redireccionamos desde la página de login al inicio de la página\n        router.redirect('/');\n      } else {\n        // Si la usuaria introduce mal sus datos guardamos el error que nos devuelve el API para que se pinte en la página\n        setLoginErrorMessage(response.errorMessage);\n      }\n    });\n  };\n\n  /*\n  Event: enviar datos del sign up (o registro) al API.\n  Con este evento enviamos los datos del sign up al servidor cuando la usuaria lanza el evento.\n  Como queremos que el back devuelva el id de la usuaria sendSingUpToApi recibe el email y la contraseña que ella haya escrito.\n  */\n  const sendSingUpToApi = (data) => {\n    // Limpiamos el error antes de enviar los datos al API\n    setSignUpErrorMessage('');\n    // Enviamos los datos al API\n    apiUser.sendSingUpToApi(data).then((response) => {\n      if (response.success === true) {\n        setUserId(response.userId);\n        // Si la usuaria introduce bien sus datos redireccionamos desde la página de signup al inicio de la página\n        router.redirect('/');\n      } else {\n        // Si la usuaria introduce mal sus datos guardamos el error que nos devuelve el API para que se pinte en la página\n        setSignUpErrorMessage(response.errorMessage);\n      }\n    });\n  };\n\n  /*\n  Event: enviar datos del profile al API.\n  Con este evento enviamos los datos del profile al servidor cuando la usuaria lanza el evento.\n  Le tenemos que indicar qué datos (nombre, email y contraseña) queremos enviar al API.\n  También le tenemos que indicar cuál es la usuaria actual, por ello enviamos el userId\n  */\n  const sendProfileToApi = (userId, data) => {\n    apiUser.sendProfileToApi(userId, data).then(() => {\n      // Después de enviar los datos al servidor los volvemos a pedir al servidor para tenerlos actualizados\n      apiUser.getProfileFromApi(userId).then((response) => {\n        setUserName(response.name);\n        setUserEmail(response.email);\n        setUserPassword(response.password);\n      });\n    });\n  };\n\n  /*\n  Event: cerrar sesión.\n  Redireccionamos al inicio de la página.\n  Recargamos la página para que se borren todos los datos del estado de React.\n  */\n  const logout = () => {\n    setUserId('');\n    router.redirect('/');\n    router.reload();\n  };\n\n  /*\n  Event: actualizar el género y la ordenación.\n  Aquí solo guardamos los datos en el estado.\n  En el primer useEffect le decimos que cuando estos datos cambien vuelva a pedir las películas al API.\n  */\n  const handleAllMoviesOptions = (data) => {\n    if (data.key === 'gender') {\n      setAllMoviesOptionGender(data.value);\n    } else if (data.key === 'sort') {\n      setAllMoviesOptionSort(data.value);\n    }\n  };\n\n  // render\n\n  return (\n    <>\n      {/* Le paso Header un booleano indicando si la usuaria está o no logada.\n      No es necesario pasarle el userId, no necesita saberlo, le basta con saber si está logada o no.\n      De esta forma Header maneja datos más simples y solo los que necesita. Queremos que Header sea lo más simple posible. */}\n      <Header isUserLogged={!!userId} logout={logout} />\n      <Switch>\n        <Route exact path=\"/\">\n          <AllMovies\n            movies={appMovies}\n            allMoviesOptionGender={allMoviesOptionGender}\n            allMoviesOptionSort={allMoviesOptionSort}\n            handleAllMoviesOptions={handleAllMoviesOptions}\n          />\n        </Route>\n        <Route path=\"/my-movies\">\n          <MyMovies movies={userMovies} />\n        </Route>\n        <Route path=\"/login\">\n          <Login\n            loginErrorMessage={loginErrorMessage}\n            sendLoginToApi={sendLoginToApi}\n          />\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp\n            signUpErrorMessage={signUpErrorMessage}\n            sendSingUpToApi={sendSingUpToApi}\n          />\n        </Route>\n        <Route path=\"/profile\">\n          <Profile\n            userId={userId}\n            userName={userName}\n            userEmail={userEmail}\n            userPassword={userPassword}\n            sendProfileToApi={sendProfileToApi}\n          />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './stylesheets/index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.querySelector('#root')\n);\n"],"sourceRoot":""}